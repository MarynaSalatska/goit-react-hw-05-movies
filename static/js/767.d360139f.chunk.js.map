{"version":3,"file":"static/js/767.d360139f.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","servises/servises.js"],"sourcesContent":["import { LineWave } from 'react-loader-spinner';\nexport default function Loader() {\n  return (\n    <LineWave\n      height=\"80\"\n      width=\"80\"\n      color=\"#6a67ce \"\n      ariaLabel=\"line-wave-loading\"\n      wrapperStyle={{}}\n      wrapperClassName=\"\"\n      visible={true}\n    />\n  );\n}\n","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies &&\n        movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <NavLink state={{ from: location }} to={`/movies/${movie.id}`}>\n                <span>{movie.title}</span>\n                {/* <span>{movie.id}</span> */}\n              </NavLink>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n","import React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function SearchForm({ handleSubmit }) {\n  // const [status, setStatus] = useState('idle');\n  const [searchParams] = useSearchParams();\n  const searchName = searchParams.get('name');\n  const [name, setName] = useState(searchName ?? '');\n  // const location = useLocation();\n\n  const handleInput = e => {\n    setName(e.target.value);\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    handleSubmit(name);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmitForm}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter  movie\"\n          name={name}\n          value={name || ''}\n          onChange={handleInput}\n        />\n        <button>Search</button>\n      </form>\n    </div>\n  );\n}\n","import  Loader  from 'components/Loader/Loader';\nimport  MovieList  from 'components/MovieList/MovieList';\nimport  SearchForm  from 'components/SearchForm/SearchForm';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { requestSearchPost } from 'servises/servises';\n\nexport default function MoviesPage() {\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const [postDetails, setPostDetails] = useState([]);\n\n  const handleSubmit = searchValue => {\n    setSearchParams({ query: searchValue });\n  };\n  console.log(searchQuery);\n  useEffect(() => {\n    if (searchQuery === null) return;\n\n    async function fetchSearchId() {\n      setStatus('LOADING');\n      try {\n        setStatus('FULFILLED');\n        const response = await requestSearchPost(searchQuery);\n        console.log(response);\n\n        setPostDetails([...response]);\n      } catch (error) {\n        setStatus({ status: 'REJECTED' });\n      }\n    }\n\n    fetchSearchId(searchQuery);\n  }, [searchQuery]);\n\n  console.log(postDetails);\n  return (\n    <>\n      {status === 'LOADING' && <Loader />}\n      <SearchForm handleSubmit={handleSubmit} />\n      <MovieList movies={postDetails} />\n    </>\n  );\n}\n// SearchForm handleSubmit;","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const requestMovies = async () => {\n  const { data } = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=fbd6a6d8896024a6d6681f42c8e9a3b7'\n  );\n  return data.results;\n};\n\nexport const requestMovieDetails = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=fbd6a6d8896024a6d6681f42c8e9a3b7&language=en-US`\n  );\n  return data;\n};\n\nexport const requestSearchPost = async query => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=fbd6a6d8896024a6d6681f42c8e9a3b7&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return data.results;\n};\n\nexport const requestCast = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=fbd6a6d8896024a6d6681f42c8e9a3b7&language=en-US`\n  );\n  return data;\n};\n\nexport const requestReview = async id => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=fbd6a6d8896024a6d6681f42c8e9a3b7&language=en-US`\n  );\n  return data;\n};"],"names":["Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClassName","visible","MovieList","movies","location","useLocation","map","movie","state","from","to","id","title","SearchForm","handleSubmit","useSearchParams","searchName","get","useState","name","setName","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","MoviesPage","status","setStatus","searchParams","setSearchParams","searchQuery","postDetails","setPostDetails","console","log","useEffect","requestSearchPost","response","fetchSearchId","searchValue","query","axios","requestMovies","data","results","requestMovieDetails","requestCast","requestReview"],"sourceRoot":""}